!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class e{constructor(){this.flashcards=JSON.parse(localStorage.getItem("studyapp-flashcards")||"[]"),this.notes=JSON.parse(localStorage.getItem("studyapp-notes")||"[]"),this.settings=JSON.parse(localStorage.getItem("studyapp-settings")||"{}"),this.currentTab="dashboard",this.currentTheme=localStorage.getItem("studyapp-theme")||"light",this.timerState={isRunning:!1,isPaused:!1,timeLeft:1500,workDuration:25,breakDuration:5,isBreak:!1,sessionsToday:0,focusTimeToday:0},this.reviewSession={cards:[],currentIndex:0,isActive:!1,showingAnswer:!1},this.init()}init(){this.setupEventListeners(),this.loadTheme(),this.updateDashboard(),this.updateFlashcardTab(),this.updateNotesTab(),this.updateTimer(),this.loadTimerStats()}setupEventListeners(){var e,t,s,i,n,a,r,d,o,c,l,m,u,h,v,g,y,p,S,w,f,E,I;document.querySelectorAll(".nav-btn").forEach(e=>{e.addEventListener("click",e=>{if("theme-toggle"===e.target.id)return void this.toggleTheme();const t=e.target.dataset.tab;t&&this.switchTab(t)})}),null==(e=document.getElementById("review-cards"))||e.addEventListener("click",()=>this.startReviewSession()),null==(t=document.getElementById("add-card"))||t.addEventListener("click",()=>this.showFlashcardModal()),null==(s=document.getElementById("new-note"))||s.addEventListener("click",()=>this.showNoteModal()),null==(i=document.getElementById("start-timer"))||i.addEventListener("click",()=>{this.switchTab("timer"),this.startTimer()}),null==(n=document.getElementById("add-flashcard"))||n.addEventListener("click",()=>this.showFlashcardModal()),null==(a=document.getElementById("save-flashcard"))||a.addEventListener("click",()=>this.saveFlashcard()),null==(r=document.getElementById("cancel-flashcard"))||r.addEventListener("click",()=>this.hideFlashcardModal()),null==(d=document.getElementById("close-flashcard-modal"))||d.addEventListener("click",()=>this.hideFlashcardModal()),null==(o=document.getElementById("create-first-card"))||o.addEventListener("click",()=>this.showFlashcardModal()),null==(c=document.getElementById("add-note"))||c.addEventListener("click",()=>this.showNoteModal()),null==(l=document.getElementById("save-note"))||l.addEventListener("click",()=>this.saveNote()),null==(m=document.getElementById("cancel-note"))||m.addEventListener("click",()=>this.hideNoteModal()),null==(u=document.getElementById("close-note-modal"))||u.addEventListener("click",()=>this.hideNoteModal()),null==(h=document.getElementById("start-pause-timer"))||h.addEventListener("click",()=>this.toggleTimer()),null==(v=document.getElementById("reset-timer"))||v.addEventListener("click",()=>this.resetTimer()),null==(g=document.getElementById("work-duration"))||g.addEventListener("change",e=>{this.timerState.workDuration=parseInt(e.target.value),this.timerState.isRunning||this.timerState.isBreak||(this.timerState.timeLeft=60*this.timerState.workDuration,this.updateTimer())}),null==(y=document.getElementById("break-duration"))||y.addEventListener("change",e=>{this.timerState.breakDuration=parseInt(e.target.value)}),null==(p=document.getElementById("flip-card"))||p.addEventListener("click",()=>this.flipCard()),null==(S=document.getElementById("review-again"))||S.addEventListener("click",()=>this.reviewCard(1)),null==(w=document.getElementById("review-hard"))||w.addEventListener("click",()=>this.reviewCard(2)),null==(f=document.getElementById("review-good"))||f.addEventListener("click",()=>this.reviewCard(3)),null==(E=document.getElementById("review-easy"))||E.addEventListener("click",()=>this.reviewCard(4)),null==(I=document.getElementById("close-review-modal"))||I.addEventListener("click",()=>this.endReviewSession()),document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("click",t=>{t.target===e&&e.classList.remove("show")})})}switchTab(e){var t,s;switch(document.querySelectorAll(".tab-content").forEach(e=>{e.classList.remove("active")}),document.querySelectorAll(".nav-btn").forEach(e=>{e.classList.remove("active")}),null==(t=document.getElementById(e))||t.classList.add("active"),null==(s=document.querySelector(`[data-tab="${e}"]`))||s.classList.add("active"),this.currentTab=e,e){case"dashboard":this.updateDashboard();break;case"flashcards":this.updateFlashcardTab();break;case"notes":this.updateNotesTab()}}toggleTheme(){this.currentTheme="light"===this.currentTheme?"dark":"light",this.loadTheme()}loadTheme(){document.documentElement.setAttribute("data-theme",this.currentTheme),localStorage.setItem("studyapp-theme",this.currentTheme);const e=document.querySelector("#theme-toggle .material-icons");e&&(e.textContent="light"===this.currentTheme?"dark_mode":"light_mode")}updateDashboard(){document.getElementById("today-cards").textContent=0,document.getElementById("total-cards").textContent=this.flashcards.length,document.getElementById("focus-time").textContent=0,document.getElementById("study-streak").textContent=0,this.updateRecentActivity()}updateRecentActivity(){const e=document.getElementById("activity-list");if(!e)return;const t=this.getRecentActivities();0!==t.length?e.innerHTML=t.map(e=>`\n            <div class="activity-item">\n                <span class="activity-icon material-icons">${e.icon}</span>\n                <span class="activity-text">${e.text}</span>\n                <span class="activity-time">${e.time}</span>\n            </div>\n        `).join(""):e.innerHTML='<p class="no-activity">No recent activity. Start studying to see your progress!</p>'}getRecentActivities(){return[]}calculateStudyStreak(){return 0}updateFlashcardTab(){const e=document.getElementById("flashcard-total"),t=document.getElementById("flashcard-due");e&&(e.textContent=this.flashcards.length),t&&(t.textContent=this.getDueCards().length),this.updateSubjectFilter(),this.updateSubjectList()}updateSubjectFilter(){const e=document.getElementById("subject-filter");if(!e)return;const t=[...new Set(this.flashcards.map(e=>e.subject))];e.innerHTML='<option value="">All Subjects</option>',t.forEach(t=>{const s=document.createElement("option");s.value=t,s.textContent=t,e.appendChild(s)})}updateSubjectList(){var e;const t=document.getElementById("subject-list");if(!t)return;if(0===this.flashcards.length)return t.innerHTML='<p class="no-cards">No cards yet. <a href="#" id="create-first-card">Create your first flashcard!</a></p>',void(null==(e=document.getElementById("create-first-card"))||e.addEventListener("click",()=>this.showFlashcardModal()));const s=this.getSubjectStats();t.innerHTML=s.map(e=>`\n            <div class="subject-item">\n                <div class="subject-info">\n                    <h4>${e.name}</h4>\n                    <p>${e.total} cards â€¢ ${e.due} due</p>\n                </div>\n                <button class="btn primary" onclick="app.startSubjectReview('${e.name}')">\n                    Review\n                </button>\n            </div>\n        `).join("")}getSubjectStats(){const e={};return this.flashcards.forEach(t=>{e[t.subject]||(e[t.subject]={name:t.subject,total:0,due:0}),e[t.subject].total++,this.isCardDue(t)&&e[t.subject].due++}),Object.values(e)}getDueCards(){return this.flashcards.filter(e=>this.isCardDue(e))}isCardDue(e){return!e.nextReview||new Date(e.nextReview)<=new Date}showFlashcardModal(){document.getElementById("flashcard-modal").classList.add("show"),document.getElementById("card-front").focus()}hideFlashcardModal(){document.getElementById("flashcard-modal").classList.remove("show"),this.clearFlashcardForm()}clearFlashcardForm(){document.getElementById("card-front").value="",document.getElementById("card-back").value="",document.getElementById("card-subject").value="",document.getElementById("card-deck").value="default"}saveFlashcard(){const e=document.getElementById("card-front").value.trim(),t=document.getElementById("card-back").value.trim(),s=document.getElementById("card-subject").value.trim(),i=document.getElementById("card-deck").value;if(!e||!t||!s)return void alert("Please fill in all required fields");const n={id:Date.now(),front:e,back:t,subject:s,deck:i,created:(new Date).toISOString(),reviews:0,interval:1,easeFactor:2.5,nextReview:(new Date).toISOString()};this.flashcards.push(n),this.saveFlashcards(),this.hideFlashcardModal(),this.updateFlashcardTab(),this.updateDashboard()}saveFlashcards(){localStorage.setItem("studyapp-flashcards",JSON.stringify(this.flashcards))}startReviewSession(e=null){let t=this.getDueCards();e&&(t=t.filter(t=>t.subject===e)),0!==t.length?(this.reviewSession={cards:this.shuffleArray(t),currentIndex:0,isActive:!0,showingAnswer:!1},this.showReviewModal()):alert("No cards due for review!")}startSubjectReview(e){this.startReviewSession(e)}showReviewModal(){document.getElementById("review-modal").classList.add("show"),this.updateReviewModal()}updateReviewModal(){const e=this.reviewSession.cards[this.reviewSession.currentIndex];document.getElementById("review-current").textContent=this.reviewSession.currentIndex+1,document.getElementById("review-total").textContent=this.reviewSession.cards.length,document.getElementById("current-card-front").textContent=e.front,document.getElementById("current-card-back").textContent=e.back,document.getElementById("card-front-review").classList.remove("hidden"),document.getElementById("card-back-review").classList.add("hidden"),document.getElementById("review-buttons").classList.add("hidden"),document.getElementById("flip-card").classList.remove("hidden"),this.reviewSession.showingAnswer=!1}flipCard(){document.getElementById("card-front-review").classList.add("hidden"),document.getElementById("card-back-review").classList.remove("hidden"),document.getElementById("review-buttons").classList.remove("hidden"),document.getElementById("flip-card").classList.add("hidden"),this.reviewSession.showingAnswer=!0}reviewCard(e){const t=this.reviewSession.cards[this.reviewSession.currentIndex];this.updateCardSpacedRepetition(t,e),this.reviewSession.currentIndex++,this.reviewSession.currentIndex>=this.reviewSession.cards.length?this.completeReviewSession():this.updateReviewModal()}updateCardSpacedRepetition(e,t){e.reviews++,t>=3?1===e.reviews?e.interval=1:2===e.reviews?e.interval=6:e.interval=Math.round(e.interval*e.easeFactor):e.interval=1,e.easeFactor=Math.max(1.3,e.easeFactor+(.1-(5-t)*(.08+.02*(5-t))));const s=new Date;s.setDate(s.getDate()+e.interval),e.nextReview=s.toISOString(),this.saveFlashcards()}completeReviewSession(){alert(`Review session complete! You reviewed ${this.reviewSession.cards.length} cards.`),this.endReviewSession()}endReviewSession(){this.reviewSession={cards:[],currentIndex:0,isActive:!1,showingAnswer:!1};document.getElementById("review-modal").classList.remove("show"),this.updateDashboard(),this.updateFlashcardTab()}shuffleArray(e){const t=[...e];for(let s=t.length-1;s>0;s--){const e=Math.floor(Math.random()*(s+1));[t[s],t[e]]=[t[e],t[s]]}return t}updateNotesTab(){const e=document.getElementById("notes-grid");e&&(0!==this.notes.length?e.innerHTML=this.notes.map(e=>`\n            <div class="note-card">\n                <h3>${e.title}</h3>\n                <p>${e.content.substring(0,100)}${e.content.length>100?"...":""}</p>\n                <div class="note-meta">\n                    <span class="note-date">${new Date(e.created).toLocaleDateString()}</span>\n                    <div class="note-actions">\n                        <button class="btn-sm" onclick="app.editNote(${e.id})">Edit</button>\n                        <button class="btn-sm danger" onclick="app.deleteNote(${e.id})">Delete</button>\n                    </div>\n                </div>\n            </div>\n        `).join(""):e.innerHTML='\n                <div class="empty-state">\n                    <span class="material-icons">note</span>\n                    <h3>No notes yet</h3>\n                    <p>Create your first note to get started!</p>\n                </div>\n            ')}showNoteModal(){var e;const t=document.getElementById("note-modal");t&&(t.classList.add("show"),null==(e=document.getElementById("note-title"))||e.focus())}hideNoteModal(){const e=document.getElementById("note-modal");e&&(e.classList.remove("show"),this.clearNoteForm())}clearNoteForm(){document.getElementById("note-title").value="",document.getElementById("note-content").value="",document.getElementById("note-tags").value=""}saveNote(){const e=document.getElementById("note-title").value.trim(),t=document.getElementById("note-content").value.trim(),s=document.getElementById("note-tags").value.trim();if(!e||!t)return void alert("Please fill in title and content");const i={id:Date.now(),title:e,content:t,tags:s.split(",").map(e=>e.trim()).filter(e=>e),created:(new Date).toISOString(),modified:(new Date).toISOString()};this.notes.push(i),this.saveNotes(),this.hideNoteModal(),this.updateNotesTab()}saveNotes(){localStorage.setItem("studyapp-notes",JSON.stringify(this.notes))}editNote(e){console.log("Edit note:",e)}deleteNote(e){confirm("Are you sure you want to delete this note?")&&(this.notes=this.notes.filter(t=>t.id!==e),this.saveNotes(),this.updateNotesTab())}startTimer(){this.timerState.isRunning||(this.timerState.isRunning=!0,this.timerState.isPaused=!1,this.timerInterval=setInterval(()=>{this.updateTimerTick()},1e3)),this.updateTimerButton()}pauseTimer(){this.timerState.isRunning=!1,this.timerState.isPaused=!0,clearInterval(this.timerInterval),this.updateTimerButton()}toggleTimer(){this.timerState.isRunning?this.pauseTimer():this.startTimer()}resetTimer(){this.timerState.isRunning=!1,this.timerState.isPaused=!1,this.timerState.timeLeft=60*this.timerState.workDuration,this.timerState.isBreak=!1,clearInterval(this.timerInterval),this.updateTimer(),this.updateTimerButton()}updateTimerTick(){this.timerState.timeLeft--,this.timerState.timeLeft<=0&&this.timerComplete(),this.updateTimer()}timerComplete(){clearInterval(this.timerInterval),this.timerState.isRunning=!1,this.timerState.isBreak?(this.timerState.isBreak=!1,this.timerState.timeLeft=60*this.timerState.workDuration,alert("Break time is over! Ready for another work session?")):(this.timerState.sessionsToday++,this.timerState.focusTimeToday+=this.timerState.workDuration,this.timerState.isBreak=!0,this.timerState.timeLeft=60*this.timerState.breakDuration,alert("Work session complete! Time for a break.")),this.updateTimer(),this.updateTimerButton(),this.saveTimerStats()}updateTimer(){const e=Math.floor(this.timerState.timeLeft/60),t=this.timerState.timeLeft%60;document.getElementById("timer-minutes").textContent=e.toString().padStart(2,"0"),document.getElementById("timer-seconds").textContent=t.toString().padStart(2,"0"),this.drawTimerCircle()}drawTimerCircle(){const e=document.getElementById("timer-canvas");if(!e)return;const t=e.getContext("2d"),s=e.width/2,i=e.height/2;t.clearRect(0,0,e.width,e.height),t.beginPath(),t.arc(s,i,120,0,2*Math.PI),t.strokeStyle="#e0e0e0",t.lineWidth=8,t.stroke();const n=this.timerState.isBreak?60*this.timerState.breakDuration:60*this.timerState.workDuration,a=(n-this.timerState.timeLeft)/n,r=2*Math.PI*a-Math.PI/2;t.beginPath(),t.arc(s,i,120,-Math.PI/2,r),t.strokeStyle=this.timerState.isBreak?"#4CAF50":"#2196F3",t.lineWidth=8,t.stroke()}updateTimerButton(){const e=document.getElementById("start-pause-timer");if(!e)return;const t=e.querySelector(".material-icons");this.timerState.isRunning?(t.textContent="pause",e.innerHTML='<span class="material-icons">pause</span> Pause'):(t.textContent="play_arrow",e.innerHTML='<span class="material-icons">play_arrow</span> Start')}loadTimerStats(){const e=(new Date).toDateString(),t=JSON.parse(localStorage.getItem("studyapp-timer-stats")||"{}")[e]||{sessions:0,focusTime:0};this.timerState.sessionsToday=t.sessions,this.timerState.focusTimeToday=t.focusTime,document.getElementById("sessions-today").textContent=this.timerState.sessionsToday,document.getElementById("focus-time-today").textContent=`${this.timerState.focusTimeToday} min`}saveTimerStats(){const e=(new Date).toDateString(),t=JSON.parse(localStorage.getItem("studyapp-timer-stats")||"{}");t[e]={sessions:this.timerState.sessionsToday,focusTime:this.timerState.focusTimeToday},localStorage.setItem("studyapp-timer-stats",JSON.stringify(t)),document.getElementById("sessions-today").textContent=this.timerState.sessionsToday,document.getElementById("focus-time-today").textContent=`${this.timerState.focusTimeToday} min`}}document.addEventListener("DOMContentLoaded",()=>{window.app=new e}),"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/sw.js").then(e=>{console.log("SW registered: ",e)}).catch(e=>{console.log("SW registration failed: ",e)})});
